=== check condition variable ===
I am No.4 philosopher_condvar
Iter 1, No.4 philosopher_condvar is thinking
I am No.3 philosopher_condvar
Iter 1, No.3 philosopher_condvar is thinking
I am No.2 philosopher_condvar
Iter 1, No.2 philosopher_condvar is thinking
I am No.1 philosopher_condvar
Iter 1, No.1 philosopher_condvar is thinking
I am No.0 philosopher_condvar
Iter 1, No.0 philosopher_condvar is thinking
kernel_execve: pid = 2, name = "exit".
I am the parent. Forking the child...
I am parent, fork a child pid 8
I am the parent, waiting now..
I am the child.
waitpid 8 ok.
exit pass.
phi_test_condvar: state_condvar[0] will eating
phi_test_condvar: signal self_cv[0] 
cond_signal begin: cvp c03a9278, cvp->count 0, cvp->owner->next_count 0
cond_signal end: cvp c03a9278, cvp->count 0, cvp->owner->next_count 0
Iter 1, No.0 philosopher_condvar is eating
phi_take_forks_condvar: phi 1 wait for forks
cond_wait begin:  cvp c03a928c, cvp->count 0, cvp->owner->next_count 0
phi_test_condvar: state_condvar[2] will eating
phi_test_condvar: signal self_cv[2] 
cond_signal begin: cvp c03a92a0, cvp->count 0, cvp->owner->next_count 0
cond_signal end: cvp c03a92a0, cvp->count 0, cvp->owner->next_count 0
Iter 1, No.2 philosopher_condvar is eating
phi_take_forks_condvar: phi 3 wait for forks
cond_wait begin:  cvp c03a92b4, cvp->count 0, cvp->owner->next_count 0
phi_take_forks_condvar: phi 4 wait for forks
cond_wait begin:  cvp c03a92c8, cvp->count 0, cvp->owner->next_count 0
phi_test_condvar: state_condvar[3] will eating
phi_test_condvar: signal self_cv[3] 
cond_signal begin: cvp c03a92b4, cvp->count 1, cvp->owner->next_count 0
cond_wait end:  cvp c03a92b4, cvp->count 0, cvp->owner->next_count 1
Iter 1, No.3 philosopher_condvar is eating
cond_signal end: cvp c03a92b4, cvp->count 0, cvp->owner->next_count 0
Iter 2, No.2 philosopher_condvar is thinking
phi_test_condvar: state_condvar[1] will eating
phi_test_condvar: signal self_cv[1] 
cond_signal begin: cvp c03a928c, cvp->count 1, cvp->owner->next_count 0
cond_wait end:  cvp c03a928c, cvp->count 0, cvp->owner->next_count 1
Iter 1, No.1 philosopher_condvar is eating
cond_signal end: cvp c03a928c, cvp->count 0, cvp->owner->next_count 0
Iter 2, No.0 philosopher_condvar is thinking
phi_take_forks_condvar: phi 0 wait for forks
cond_wait begin:  cvp c03a9278, cvp->count 0, cvp->owner->next_count 0
phi_test_condvar: state_condvar[0] will eating
phi_test_condvar: signal self_cv[0] 
cond_signal begin: cvp c03a9278, cvp->count 1, cvp->owner->next_count 0
cond_wait end:  cvp c03a9278, cvp->count 0, cvp->owner->next_count 1
Iter 2, No.0 philosopher_condvar is eating
cond_signal end: cvp c03a9278, cvp->count 0, cvp->owner->next_count 0
Iter 2, No.1 philosopher_condvar is thinking
Iter 2, No.3 philosopher_condvar is thinking
phi_test_condvar: state_condvar[2] will eating
phi_test_condvar: signal self_cv[2] 
cond_signal begin: cvp c03a92a0, cvp->count 0, cvp->owner->next_count 0
cond_signal end: cvp c03a92a0, cvp->count 0, cvp->owner->next_count 0
Iter 2, No.2 philosopher_condvar is eating
phi_test_condvar: state_condvar[4] will eating
phi_test_condvar: signal self_cv[4] 
cond_signal begin: cvp c03a92c8, cvp->count 1, cvp->owner->next_count 0
cond_wait end:  cvp c03a92c8, cvp->count 0, cvp->owner->next_count 1
Iter 1, No.4 philosopher_condvar is eating
cond_signal end: cvp c03a92c8, cvp->count 0, cvp->owner->next_count 0
Iter 3, No.0 philosopher_condvar is thinking
phi_take_forks_condvar: phi 3 wait for forks
cond_wait begin:  cvp c03a92b4, cvp->count 0, cvp->owner->next_count 0
Iter 3, No.2 philosopher_condvar is thinking
phi_test_condvar: state_condvar[1] will eating
phi_test_condvar: signal self_cv[1] 
cond_signal begin: cvp c03a928c, cvp->count 0, cvp->owner->next_count 0
cond_signal end: cvp c03a928c, cvp->count 0, cvp->owner->next_count 0
Iter 2, No.1 philosopher_condvar is eating
phi_take_forks_condvar: phi 0 wait for forks
cond_wait begin:  cvp c03a9278, cvp->count 0, cvp->owner->next_count 0
phi_take_forks_condvar: phi 2 wait for forks
cond_wait begin:  cvp c03a92a0, cvp->count 0, cvp->owner->next_count 0
phi_test_condvar: state_condvar[2] will eating
phi_test_condvar: signal self_cv[2] 
cond_signal begin: cvp c03a92a0, cvp->count 1, cvp->owner->next_count 0
cond_wait end:  cvp c03a92a0, cvp->count 0, cvp->owner->next_count 1
Iter 3, No.2 philosopher_condvar is eating
cond_signal end: cvp c03a92a0, cvp->count 0, cvp->owner->next_count 0
Iter 3, No.1 philosopher_condvar is thinking
phi_test_condvar: state_condvar[0] will eating
phi_test_condvar: signal self_cv[0] 
cond_signal begin: cvp c03a9278, cvp->count 1, cvp->owner->next_count 0
cond_wait end:  cvp c03a9278, cvp->count 0, cvp->owner->next_count 1
Iter 3, No.0 philosopher_condvar is eating
cond_signal end: cvp c03a9278, cvp->count 0, cvp->owner->next_count 0
Iter 2, No.4 philosopher_condvar is thinking
phi_take_forks_condvar: phi 4 wait for forks
cond_wait begin:  cvp c03a92c8, cvp->count 0, cvp->owner->next_count 0
phi_test_condvar: state_condvar[4] will eating
phi_test_condvar: signal self_cv[4] 
cond_signal begin: cvp c03a92c8, cvp->count 1, cvp->owner->next_count 0
cond_wait end:  cvp c03a92c8, cvp->count 0, cvp->owner->next_count 1
Iter 2, No.4 philosopher_condvar is eating
cond_signal end: cvp c03a92c8, cvp->count 0, cvp->owner->next_count 0
Iter 4, No.0 philosopher_condvar is thinking
phi_take_forks_condvar: phi 1 wait for forks
cond_wait begin:  cvp c03a928c, cvp->count 0, cvp->owner->next_count 0
phi_test_condvar: state_condvar[1] will eating
phi_test_condvar: signal self_cv[1] 
cond_signal begin: cvp c03a928c, cvp->count 1, cvp->owner->next_count 0
cond_wait end:  cvp c03a928c, cvp->count 0, cvp->owner->next_count 1
Iter 3, No.1 philosopher_condvar is eating
cond_signal end: cvp c03a928c, cvp->count 0, cvp->owner->next_count 0
Iter 4, No.2 philosopher_condvar is thinking
phi_take_forks_condvar: phi 2 wait for forks
cond_wait begin:  cvp c03a92a0, cvp->count 0, cvp->owner->next_count 0
phi_test_condvar: state_condvar[2] will eating
phi_test_condvar: signal self_cv[2] 
cond_signal begin: cvp c03a92a0, cvp->count 1, cvp->owner->next_count 0
cond_wait end:  cvp c03a92a0, cvp->count 0, cvp->owner->next_count 1
Iter 4, No.2 philosopher_condvar is eating
cond_signal end: cvp c03a92a0, cvp->count 0, cvp->owner->next_count 0
Iter 4, No.1 philosopher_condvar is thinking
Iter 3, No.4 philosopher_condvar is thinking
phi_test_condvar: state_condvar[0] will eating
phi_test_condvar: signal self_cv[0] 
cond_signal begin: cvp c03a9278, cvp->count 0, cvp->owner->next_count 0
cond_signal end: cvp c03a9278, cvp->count 0, cvp->owner->next_count 0
Iter 4, No.0 philosopher_condvar is eating
phi_take_forks_condvar: phi 1 wait for forks
cond_wait begin:  cvp c03a928c, cvp->count 0, cvp->owner->next_count 0
phi_test_condvar: state_condvar[3] will eating
phi_test_condvar: signal self_cv[3] 
cond_signal begin: cvp c03a92b4, cvp->count 1, cvp->owner->next_count 0
cond_wait end:  cvp c03a92b4, cvp->count 0, cvp->owner->next_count 1
Iter 2, No.3 philosopher_condvar is eating
cond_signal end: cvp c03a92b4, cvp->count 0, cvp->owner->next_count 0
No.2 philosopher_condvar quit
phi_take_forks_condvar: phi 4 wait for forks
cond_wait begin:  cvp c03a92c8, cvp->count 0, cvp->owner->next_count 0
phi_test_condvar: state_condvar[1] will eating
phi_test_condvar: signal self_cv[1] 
cond_signal begin: cvp c03a928c, cvp->count 1, cvp->owner->next_count 0
cond_wait end:  cvp c03a928c, cvp->count 0, cvp->owner->next_count 1
Iter 4, No.1 philosopher_condvar is eating
cond_signal end: cvp c03a928c, cvp->count 0, cvp->owner->next_count 0
No.0 philosopher_condvar quit
No.1 philosopher_condvar quit
phi_test_condvar: state_condvar[4] will eating
phi_test_condvar: signal self_cv[4] 
cond_signal begin: cvp c03a92c8, cvp->count 1, cvp->owner->next_count 0
cond_wait end:  cvp c03a92c8, cvp->count 0, cvp->owner->next_count 1
Iter 3, No.4 philosopher_condvar is eating
cond_signal end: cvp c03a92c8, cvp->count 0, cvp->owner->next_count 0
Iter 3, No.3 philosopher_condvar is thinking
phi_take_forks_condvar: phi 3 wait for forks
cond_wait begin:  cvp c03a92b4, cvp->count 0, cvp->owner->next_count 0
phi_test_condvar: state_condvar[3] will eating
phi_test_condvar: signal self_cv[3] 
cond_signal begin: cvp c03a92b4, cvp->count 1, cvp->owner->next_count 0
cond_wait end:  cvp c03a92b4, cvp->count 0, cvp->owner->next_count 1
Iter 3, No.3 philosopher_condvar is eating
cond_signal end: cvp c03a92b4, cvp->count 0, cvp->owner->next_count 0
Iter 4, No.4 philosopher_condvar is thinking
Iter 4, No.3 philosopher_condvar is thinking
phi_test_condvar: state_condvar[4] will eating
phi_test_condvar: signal self_cv[4] 
cond_signal begin: cvp c03a92c8, cvp->count 0, cvp->owner->next_count 0
cond_signal end: cvp c03a92c8, cvp->count 0, cvp->owner->next_count 0
Iter 4, No.4 philosopher_condvar is eating
phi_take_forks_condvar: phi 3 wait for forks
cond_wait begin:  cvp c03a92b4, cvp->count 0, cvp->owner->next_count 0
phi_test_condvar: state_condvar[3] will eating
phi_test_condvar: signal self_cv[3] 
cond_signal begin: cvp c03a92b4, cvp->count 1, cvp->owner->next_count 0
cond_wait end:  cvp c03a92b4, cvp->count 0, cvp->owner->next_count 1
Iter 4, No.3 philosopher_condvar is eating
cond_signal end: cvp c03a92b4, cvp->count 0, cvp->owner->next_count 0
No.4 philosopher_condvar quit
No.3 philosopher_condvar quit
